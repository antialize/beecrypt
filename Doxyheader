/*! \mainpage BeeCrypt API Documentation.

Included in the library are:
    - entropy sources for initializing pseudo-random generators
    - pseudo-random generators
        - FIPS-186
        - Mersenne Twister
    - block ciphers
        - AES
        - Blowfish
    - hash functions
        - MD5
        - SHA-1
        - SHA-256
    - keyed hash functions (a.k.a. message authentication codes)
        - HMAC-MD5
        - HMAC-SHA-1
        - HMAC-SHA-256
    - multi-precision integer library, with assembler-optimized routines
      for several processors
    - probabilistic primality testing, with optimized small prime trial
      division
    - discrete logarithm parameter generation over a prime field
    - Diffie-Hellman key agreement
    - DSA signature scheme
    - ElGamal signature scheme (two variants)
    - RSA keypair generation with chinese remainder theorem variables
    - RSA public & private key operations
    - DHAES encryption scheme

Planned for the near future are:
    - mp64 library for operation on 64-bit computers (and possibly also
      on certain 32-bit platforms)
    - compliance with and compliance statements for IEEE P1363
    - more blockciphers (Twofish, ... )
    - more hash functions (RIPEMD-160, SHA-384, SHA-512, HAVAL, Tiger)
    - RSA signatures as specified by RFC-2440.
    - Elliptic Curves (ECDSA, ... )
    - more blockcipher modes (OFB, ... )

The library has been tested on the following platforms:
    - FreeBSD 4.0 alpha
    - FreeBSD 4.0, 4.2 x86
        - includes assembler optimization (tuned for Pentium and higher)
    - HP-UX 11a PA-RISC
    - Linux glibc 2.x alpha
    - Linux glibc 2.x arm
        - includes assembler optimization
    - Linux glibc 2.x ppc
        - includes assembler optimization for 32-bit PowerPC
     - Linux glibc 2.x sparc
        - includes assembler optimization for Sparc v8
    - Linux glibc 2.x x86
        - includes assembler optimization (tuned for Pentium and higher)
    - Solaris 2.6/2.7/2.8 sparc (with Forte or gnu compilers)
        - includes assembler optimization for Sparc v8, v8plus and v9
    - Solaris 2.7/2.8 x86 (with Forte or gnu compilers)
        - includes assembler optimization (tuned for Pentium and higher)
    - Tru64 Unix alpha
    - Win32 (Windows 95, 98, NT 4.0, 2000)
        - includes assembler optimization (tuned for Pentium and higher)

The library is currently in the process of being ported to:
    - Darwin (apparently Apple has decided to change the PPC assembler format;
      this will need a fix)
    - Cygwin (the DLL builds now, but needs to be tested)

The structures in the library are geared towards exchange with Java
and its security and cryptography classes. This library can also be
accessed from Java by installing BeeCrypt for Java, a JCE 1.2 crypto
provider and the counterpart of this library.

Many thanks to:
 
 */

/*! \defgroup	ES_m	Entropy sources
 */
/*! \defgroup	ES_audio_m	Entropy sources: /dev/audio
 */
/*! \defgroup	ES_dsp_m	Entropy sources: /dev/dsp
 */
/*! \defgroup	ES_random_m	Entropy sources: /dev/random
 */
/*! \defgroup	ES_urandom_m	Entropy sources: /dev/urandom
 */
/*! \defgroup	ES_tty_m	Entropy sources: /dev/tty
 */
/*! \defgroup	PRNG_m	Pseudo-Random Number Generators
 */
/*! \defgroup	PRNG_fips186_m	Pseudo-Random Number Generators: FIPS-186
 */
/*! \defgroup	HASH_m	Hash Functions
 */
/*! \defgroup	HASH_md5_m	Hash Functions: MD5
 */
/*! \defgroup	HASH_sha1_m	Hash Functions: SHA-1
 */
/*! \defgroup	HASH_sha256_m	Hash Functions: SHA-256
 */
/*! \defgroup	HMAC_m	Keyed Hash Functions, a.k.a. Message Authentication Codes
 */
/*! \defgroup	HMAC_md5_m	Keyed Hash Functions: HMAC-MD5
 */
/*! \defgroup	HMAC_sha1_m	Keyed Hash Functions: HMAC-SHA-1
 */
/*! \defgroup	HMAC_sha256_m	Keyed Hash Functions: HMAC-SHA-256
 */
/*! \defgroup	BC_m	Block ciphers
 */
/*! \defgroup	BC_aes_m	Block ciphers: AES
 */
/*! \defgroup	BC_blowfish_m	Block ciphers: Blowfish
 */
/*! \defgroup	MP32_m	Multiple Precision Integer Arithmetic (32 bit)
 */
/*! \defgroup	MP64_m	Multiple Precision Integer Arithmetic (64 bit)
 */
/*! \defgroup	DL_m	Discrete Logarithm Primitives
 */
/*! \defgroup	DL_dh_m	Discrete Logarithm Primitives: Diffie-Hellman
 */
/*! \defgroup	DL_dsa_m	Discrete Logarithm Primitives: DSA
 */
/*! \defgroup	DL_elgamal_m	Discrete Logarithm Primitives: ElGamal
 */
/*! \defgroup	IF_m	Integer Factorization Primitives
 */
/*! \defgroup	IF_rsa_m	Integer Factorization Primitives: RSA
 */
/*! \defgroup	JAVA_m	Java API
 */
